import * as React from 'react'
import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import JobPost from '@/components/JobPost'
import JobDetailPopup from '@/components/JobDetailPopup'
import Job from '@/interfaces/Job'
import Grid from '@mui/material/Unstable_Grid2'
import {
  Box,
  Button,
  Backdrop,
  CircularProgress
} from '@mui/material'
import { useRouter } from 'next/router'
import { Add } from '@mui/icons-material'
import Header from '@/components/Header'
import UserObj from '@/interfaces/User'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const router = useRouter()
  const defData: Job = {
    id: '',
    title: '',
    company: '',
    description: '',
    is_active: false,
    job_responsibilities: [],
    applied_date: null
  }
  const [jobDetail, setJobDetail] = React.useState<Job>(defData)
  const [jobs, setJobs] = React.useState<Job[]>([])
  const [open, setOpen] = React.useState<boolean>(false)
  const [pageLoading, setPageLoading] = React.useState<boolean>(true)
  const [user, setUser] = React.useState<UserObj | null>(null)
  const handleOpen = (jobDetail: Job) => {
    setJobDetail(jobDetail)
    setOpen(true)
  }
  const handleClose = () => setOpen(false)
  const handleComplete = () => { setPageLoading(false) }
  const callJobPosts = async () => {
    try {
      const res = await fetch('/api/job-posts/')
      const data = await res.json()
      console.log(data)
      return data
    } catch (err) {
      console.log(err)
    }
  }
  const checkLogin = () => {
    fetch('/api/auth/check').then(async (res) => {
      const data = await res.json()
      setUser(data)
    })
  }
  React.useEffect(() => {
    checkLogin()
    // fetch data
    callJobPosts().then((data) => {
      setJobs(data)
      handleComplete()
    })
  }, [])

  return (
    <>
      <Head>
        <title>Home Job Post</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Backdrop
          sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}
          open={pageLoading}
        >
          <CircularProgress color="success" />
        </Backdrop>
        <Header userObj={user || null}></Header>
        <Grid
          container
          direction="column"
          justifyContent="center"
          alignItems="flex-start"
        >
          <Box component='div' sx={{ mb: 2 }}>
            {
              user?.role == 'employer' &&
                <Button
                  variant="contained"
                  startIcon={<Add />}
                  onClick={() => router.push('/jobs/add')}
                >
                  Add New Job Post
                </Button>
            }
          </Box>
          {
            jobs &&
              jobs.map((job, idx) =>
                job.is_active &&
                  <JobPost
                    key={`${job.id}-${idx}`}
                    job={job}
                    role={user?.role}
                    onOpen={handleOpen}
                  />
              )
          }
        </Grid>
        <JobDetailPopup
          jobDetail={jobDetail}
          open={open}
          closePopup={() => handleClose()}
        />
      </main>
    </>
  )
}
